/******************************************************************************
 * Module: Timers
 * File Name: timers.c
 * Description: Source file for the ATmega32 Timer driver
 * Author: Esraa Fawzy
 *******************************************************************************/
#include <avr/io.h>
#include "timers.h"
#include<avr/interrupt.h>



static volatile void (*g_callBackPtr)(void) = NULL_PTR;

/*
 * ISR in case of OVERFLOW mood
 */
ISR(TIMER1_OVF_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)();
	}
}

/*
 * ISR in case of COMPARE mood
 */

ISR(TIMER1_COMPA_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)();
	}
}


void Timer1_init(const Timer1_ConfigType * Config_Ptr)
{
	TCCR1A = (1<<FOC1A) | (1<<FOC1B);
		TCCR1B = (Config_Ptr->mode << WGM12);
		TCCR1B = (TCCR1B & 0xF8) | (Config_Ptr->prescaler);

		TCNT1 = Config_Ptr->initial_value;
		if(Config_Ptr->mode == ctc)
		{
			OCR1A = Config_Ptr->compare_value;
		}
		TIMSK |= (1<<OCIE1A) ; //choose prescaler of timer 1

}

void Timer1_deInit(void)
{
	TIFR|=TOV1;
	TCNT1=0;
	TCCR1B=0;

}

void Timer1_setCallBack(void(*a_ptr)(void))
{
	g_callBackPtr = a_ptr;

}


